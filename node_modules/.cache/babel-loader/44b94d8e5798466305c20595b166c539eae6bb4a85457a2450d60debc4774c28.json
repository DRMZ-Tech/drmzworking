{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LUCKY\\\\Desktop\\\\drmzworking\\\\src\\\\components\\\\pages\\\\products\\\\Products.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Gallery.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gallery = () => {\n  _s();\n  const [viewType, setViewType] = useState('grid');\n  const products = [{\n    id: 1,\n    name: 'Product 1',\n    images: [{\n      id: 1,\n      src: 'one.jpg',\n      alt: 'Product 1 - Image 1'\n    }, {\n      id: 2,\n      src: 'Two.jpg',\n      alt: 'Product 1 - Image 2'\n    }]\n  }, {\n    id: 2,\n    name: 'Product 2',\n    images: [{\n      id: 1,\n      src: 'three.jpg',\n      alt: 'Product 2 - Image 1'\n    }, {\n      id: 2,\n      src: 'four.jpg',\n      alt: 'Product 2 - Image 2'\n    }, {\n      id: 3,\n      src: 'five.jpg',\n      alt: 'Product 2 - Image 3'\n    }]\n  }\n  // Add more products as needed\n  ];\n\n  const handleViewTypeChange = type => {\n    setViewType(type);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `toggle-btn ${viewType === 'grid' ? 'active' : ''}`,\n        onClick: () => handleViewTypeChange('grid'),\n        children: \"Grid View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `toggle-btn ${viewType === 'list' ? 'active' : ''}`,\n        onClick: () => handleViewTypeChange('list'),\n        children: \"List View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `gallery ${viewType === 'list' ? 'list' : ''}`,\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `product ${viewType === 'list' ? 'list-item' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"product-name\",\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: product.images.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.src,\n            alt: image.alt,\n            className: \"product-image\"\n          }, image.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Gallery, \"9vOuEHb9DQUt3ZwhSg4YEA24nxg=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Gallery","_s","viewType","setViewType","products","id","name","images","src","alt","handleViewTypeChange","type","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","product","image","_c","$RefreshReg$"],"sources":["C:/Users/LUCKY/Desktop/drmzworking/src/components/pages/products/Products.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Gallery.css';\r\n\r\nconst Gallery = () => {\r\n  const [viewType, setViewType] = useState('grid');\r\n\r\n  const products = [\r\n    {\r\n      id: 1,\r\n      name: 'Product 1',\r\n      images: [\r\n        { id: 1, src: 'one.jpg', alt: 'Product 1 - Image 1' },\r\n        { id: 2, src: 'Two.jpg', alt: 'Product 1 - Image 2' },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Product 2',\r\n      images: [\r\n        { id: 1, src: 'three.jpg', alt: 'Product 2 - Image 1' },\r\n        { id: 2, src: 'four.jpg', alt: 'Product 2 - Image 2' },\r\n        { id: 3, src: 'five.jpg', alt: 'Product 2 - Image 3' },\r\n      ],\r\n    },\r\n    // Add more products as needed\r\n  ];\r\n\r\n  const handleViewTypeChange = (type) => {\r\n    setViewType(type);\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallery-container\">\r\n      <div className=\"toggle-buttons\">\r\n        <button\r\n          className={`toggle-btn ${viewType === 'grid' ? 'active' : ''}`}\r\n          onClick={() => handleViewTypeChange('grid')}\r\n        >\r\n          Grid View\r\n        </button>\r\n        <button\r\n          className={`toggle-btn ${viewType === 'list' ? 'active' : ''}`}\r\n          onClick={() => handleViewTypeChange('list')}\r\n        >\r\n          List View\r\n        </button>\r\n      </div>\r\n\r\n      <div className={`gallery ${viewType === 'list' ? 'list' : ''}`}>\r\n        {products.map((product) => (\r\n          <div key={product.id} className={`product ${viewType === 'list' ? 'list-item' : ''}`}>\r\n            <h3 className=\"product-name\">{product.name}</h3>\r\n            <div className=\"image-container\">\r\n              {product.images.map((image) => (\r\n                <img key={image.id} src={image.src} alt={image.alt} className=\"product-image\" />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}