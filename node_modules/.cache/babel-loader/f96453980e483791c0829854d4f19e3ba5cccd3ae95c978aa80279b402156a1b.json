{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LUCKY\\\\Desktop\\\\drmzworking\\\\src\\\\components\\\\pages\\\\products\\\\Products.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gallery = () => {\n  _s();\n  const [viewType, setViewType] = useState('grid');\n  const [captions, setCaptions] = useState([]);\n  const toggleView = () => {\n    setViewType(prevType => prevType === 'grid' ? 'list' : 'grid');\n  };\n  const handleCaptionChange = (index, event) => {\n    const newCaptions = [...captions];\n    newCaptions[index] = event.target.value;\n    setCaptions(newCaptions);\n  };\n  const images = [{\n    id: 1,\n    src: 'one.jpg',\n    alt: 'Image 1'\n  }, {\n    id: 2,\n    src: 'Two.jpg',\n    alt: 'Image 2'\n  }, {\n    id: 3,\n    src: 'three.jpg',\n    alt: 'Image 3'\n  }\n  // Add more images as needed\n  ];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-btn\",\n      onClick: toggleView,\n      children: [\"Switch to \", viewType === 'grid' ? 'List' : 'List', \" View\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), viewType === 'grid' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.src,\n          alt: image.alt,\n          className: \"grid-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"caption-input\",\n          placeholder: \"Add a caption...\",\n          value: captions[image.id - 1] || '',\n          onChange: event => handleCaptionChange(image.id - 1, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, image.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-container\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.src,\n          alt: image.alt,\n          className: \"list-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"caption-input\",\n          placeholder: \"Add a caption...\",\n          value: captions[image.id - 1] || '',\n          onChange: event => handleCaptionChange(image.id - 1, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, image.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Gallery, \"qgYVDwDx5PCh27W1a9EM6g8KyPQ=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Gallery","_s","viewType","setViewType","captions","setCaptions","toggleView","prevType","handleCaptionChange","index","event","newCaptions","target","value","images","id","src","alt","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","image","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/LUCKY/Desktop/drmzworking/src/components/pages/products/Products.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Gallery = () => {\r\n  const [viewType, setViewType] = useState('grid');\r\n  const [captions, setCaptions] = useState([]);\r\n\r\n  const toggleView = () => {\r\n    setViewType(prevType => (prevType === 'grid' ? 'list' : 'grid'));\r\n  };\r\n\r\n  const handleCaptionChange = (index, event) => {\r\n    const newCaptions = [...captions];\r\n    newCaptions[index] = event.target.value;\r\n    setCaptions(newCaptions);\r\n  };\r\n\r\n  const images = [\r\n    { id: 1, src: 'one.jpg', alt: 'Image 1' },\r\n    { id: 2, src: 'Two.jpg', alt: 'Image 2' },\r\n    { id: 3, src: 'three.jpg', alt: 'Image 3' },\r\n    // Add more images as needed\r\n  ];\r\n\r\n  return (\r\n    <div className=\"gallery-container\">\r\n      <button className=\"toggle-btn\" onClick={toggleView}>\r\n        Switch to {viewType === 'grid' ? 'List' : 'List'} View\r\n      </button>\r\n\r\n      {viewType === 'grid' ? (\r\n        <div className=\"grid-container\">\r\n          {images.map(image => (\r\n            <div key={image.id} className=\"grid-item\">\r\n              <img src={image.src} alt={image.alt} className=\"grid-image\" />\r\n              <textarea\r\n                className=\"caption-input\"\r\n                placeholder=\"Add a caption...\"\r\n                value={captions[image.id - 1] || ''}\r\n                onChange={event => handleCaptionChange(image.id - 1, event)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <ul className=\"list-container\">\r\n          {images.map(image => (\r\n            <li key={image.id} className=\"list-item\">\r\n              <img src={image.src} alt={image.alt} className=\"list-image\" />\r\n              <textarea\r\n                className=\"caption-input\"\r\n                placeholder=\"Add a caption...\"\r\n                value={captions[image.id - 1] || ''}\r\n                onChange={event => handleCaptionChange(image.id - 1, event)}\r\n              />\r\n            </li>\r\n          )\r\n          )\r\n          }\r\n        </ul>\r\n      )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}