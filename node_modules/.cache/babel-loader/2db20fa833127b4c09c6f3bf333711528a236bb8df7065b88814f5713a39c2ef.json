{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LUCKY\\\\Desktop\\\\drmzworking\\\\src\\\\components\\\\pages\\\\products\\\\Products.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Product = () => {\n  _s();\n  const [viewType, setViewType] = useState('grid');\n  const [captions, setCaptions] = useState([]);\n  const toggleView = () => {\n    setViewType(prevType => prevType === 'grid' ? 'list' : 'grid');\n  };\n  const handleCaptionChange = (index, event) => {\n    const newCaptions = [...captions];\n    newCaptions[index] = event.target.value;\n    setCaptions(newCaptions);\n  };\n  const images = [{\n    id: 1,\n    src: 'one.jpg'\n  }, {\n    id: 2,\n    src: 'Two.jpg'\n  }, {\n    id: 3,\n    src: 'three.jpg'\n  }\n  // Add more images as needed\n  ];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleView,\n      children: [\"Switch to \", viewType === 'grid' ? 'List' : 'Grid', \" View\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), viewType === 'grid' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.src,\n          alt: `Image ${image.id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Add a caption...\",\n          value: captions[image.id - 1] || '',\n          onChange: event => handleCaptionChange(image.id - 1, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, image.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-container\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.src,\n          alt: `Image ${image.id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Add a caption...\",\n          value: captions[image.id - 1] || '',\n          onChange: event => handleCaptionChange(image.id - 1, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, image.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Product, \"qgYVDwDx5PCh27W1a9EM6g8KyPQ=\");\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Product","_s","viewType","setViewType","captions","setCaptions","toggleView","prevType","handleCaptionChange","index","event","newCaptions","target","value","images","id","src","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","image","alt","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/LUCKY/Desktop/drmzworking/src/components/pages/products/Products.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Product = () => {\r\n  const [viewType, setViewType] = useState('grid');\r\n  const [captions, setCaptions] = useState([]);\r\n\r\n  const toggleView = () => {\r\n    setViewType(prevType => (prevType === 'grid' ? 'list' : 'grid'));\r\n  };\r\n\r\n  const handleCaptionChange = (index, event) => {\r\n    const newCaptions = [...captions];\r\n    newCaptions[index] = event.target.value;\r\n    setCaptions(newCaptions);\r\n  };\r\n\r\n  const images = [\r\n    { id: 1, src: 'one.jpg' },\r\n    { id: 2, src: 'Two.jpg' },\r\n    { id: 3, src: 'three.jpg' },\r\n    // Add more images as needed\r\n  ];\r\n\r\n  return (\r\n    <div className=\"gallery-container\">\r\n      <button onClick={toggleView}>\r\n        Switch to {viewType === 'grid' ? 'List' : 'Grid'} View\r\n      </button>\r\n\r\n      {viewType === 'grid' ? (\r\n        <div className=\"grid-container\">\r\n          {images.map(image => (\r\n            <div key={image.id} className=\"grid-item\">\r\n              <img src={image.src} alt={`Image ${image.id}`} />\r\n              <textarea\r\n                placeholder=\"Add a caption...\"\r\n                value={captions[image.id - 1] || ''}\r\n                onChange={event => handleCaptionChange(image.id - 1, event)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <ul className=\"list-container\">\r\n          {images.map(image => (\r\n            <li key={image.id} className=\"list-item\">\r\n              <img src={image.src} alt={`Image ${image.id}`} />\r\n              <textarea\r\n                placeholder=\"Add a caption...\"\r\n                value={captions[image.id - 1] || ''}\r\n                onChange={event => handleCaptionChange(image.id - 1, event)}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}